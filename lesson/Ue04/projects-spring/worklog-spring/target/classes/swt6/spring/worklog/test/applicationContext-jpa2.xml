<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/data/jpa https://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <context:property-placeholder location="swt6/spring/worklog/test/jpa.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="swt6.spring.worklog.domain"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
        </property>
    </bean>

    <!-- Besides enabling annotation-based dependency injection this tag also
       registers a PersistenceAnnotationBeanPostProcessor bean that processes
       @PersistenceContext for injecting EntityManager -->
    <context:component-scan base-package="swt6.spring.worklog.dao, swt6.spring.worklog.logic"/>
    <!-- <context:annotation-config/>-->

    <!-- BeanPostProcessor for exception translation -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!-- ============================ DAO DEFINITIONS =========================== -->
<!--    <bean class="swt6.spring.worklog.dao.jpa.EmployeeDaoJpa" name="employeeDao"/>-->

    <!-- ====================== BUSINESS OBJECT DEFINITIONS ======================= -->
<!--    <bean id="workLog" class="swt6.spring.worklog.logic.WorkLogServiceImpl1">-->
<!--        <property name="employeeDao" ref="employeeDao"/>-->
<!--    </bean>-->
    <jpa:repositories base-package="swt6.spring.worklog.dao" />

    <!-- ======================== TRANSACTION DEFINITIONS ========================= -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <!-- Not needed because its automatically referenced. -->
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

<!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="find*" read-only="true"/>-->
<!--            <tx:method name="*"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

    <!--    <aop:config>-->
    <!--        <aop:pointcut id="transactedOperations"-->
    <!--                      expression="execution(public * swt6.spring.worklog.logic.WorkLogServiceImpl1.*(..))"/>-->
    <!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="transactedOperations"/>-->
    <!--    </aop:config>-->

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- ========================= WorkLogViewModelImpl =========================== -->
<!--    <bean id="workLogViewModel" class="swt6.spring.worklog.ui.WorkLogViewModelImpl">-->
<!--        <property name="workLog" ref="workLog"/>-->
<!--    </bean>-->

<!--    <bean id="jpaInterceptor" class="swt6.util.JpaInterceptor">-->
<!--        <property name="entityManagerFactory" ref="entityManagerFactory"/>-->
<!--    </bean>-->

<!--    <aop:config>-->
<!--        <aop:aspect id="jpaInterceptorAspect" ref="jpaInterceptor">-->
<!--            <aop:around pointcut="execution(public * swt6.spring.worklog.ui.WorkLogViewModelImpl.*(..))"-->
<!--                        method="holdEntityManager"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

</beans>



